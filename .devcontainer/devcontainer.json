// original image: mcr.microsoft.com/devcontainers/universal:2
{
  // "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
  "build": {
    "dockerfile": "./Dockerfile",
    "context": "."
  },
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "username": "codespace",
      "userUid": "1000",
      "userGid": "1000",
      "installZsh": "true",
      "configureZshAsDefaultShell": "true"
    },
    // "ghcr.io/devcontainers/features/dotnet:2": {
    //   "version": "9.0",
    //   "dotnetRuntimeVersions": "8.0",
    //   "aspNetCoreRuntimeVersions": "8.0"
    // },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "24",
      "additionalVersions": "18"
    },
    // "ghcr.io/devcontainers/features/python:1": {
    //   "version": "3.13",
    //   "additionalVersions": "3.12",
    //   "installJupyterlab": "true",
    //   "configureJupyterlabAllowOrigin": "*",
    //   "useOryxIfAvailable": "false"
    // },
    // "ghcr.io/devcontainers/features/php:1": {
    //   "version": "8.4.7",
    //   "additionalVersions": "8.3.21",
    //   "installComposer": "true"
    // },
    // "ghcr.io/devcontainers/features/ruby:1": {
    //   "version": "latest"
    // },
    // "ghcr.io/devcontainers/features/java:1": {
    //   "version": "24",
    //   "additionalVersions": "21",
    //   "installGradle": "true",
    //   "installMaven": "true"
    // },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
      // "ppa": "false"
    },
    // "ghcr.io/devcontainers/features/git-lfs:1": {
    //   "version": "latest"
    // },
    // "ghcr.io/devcontainers/features/go:1": {
    //   "version": "latest"
    // },
    // "ghcr.io/devcontainer-community/devcontainer-features/bun.sh:1": {
    //   "version": "latest"
    // },
    "ghcr.io/coder/devcontainer-features/code-server:1": {
      "appName": "Diploi",
      "disableWorkspaceTrust": "true",
      "disableGettingStartedOverride": "true",
      "disableUpdateCheck": "true",
      "disableTelemetry": "true",
      "auth": "none",
      "host": "0.0.0.0",
      "port": "3001",
      "workspace": "/app"
    }
    // "ghcr.io/devcontainers/features/oryx:1": "latest"
  },
  "overrideFeatureInstallOrder": [
    "ghcr.io/devcontainers/features/common-utils",
    "ghcr.io/devcontainers/features/git",
    "ghcr.io/devcontainers/features/dotnet",
    "ghcr.io/devcontainers/features/node",
    "ghcr.io/devcontainer-community/devcontainer-features/bun.sh",
    "ghcr.io/devcontainers/features/python",
    "ghcr.io/devcontainers/features/php",
    "ghcr.io/devcontainers/features/ruby",
    "ghcr.io/devcontainers/features/java",
    "ghcr.io/devcontainers/features/git-lfs",
    "ghcr.io/devcontainers/features/go",
    "ghcr.io/coder/devcontainer-features/code-server"
  ],
  "remoteUser": "codespace",
  "containerUser": "codespace",
  // Setup the Diploi Git credential helper
  "postCreateCommand": "rm /etc/gitconfig && ln -s /etc/diploi-git/gitconfig /etc/gitconfig",
  "postStartCommand": "nohup /usr/local/bin/code-server-entrypoint",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    80,
    3000,
    3001
  ],
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "workbench.colorTheme": "Default Dark Modern",
        "workbench.startupEditor": "none",
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/go",
        "python.defaultInterpreterPath": "/home/codespace/.python/current/bin/python3",
        "jupyter.kernels.filter": [
          {
            "path": "/opt/conda/bin/python",
            "type": "pythonEnvironment"
          },
          {
            "path": "/usr/local/python/current/bin/python3",
            "type": "pythonEnvironment"
          },
          {
            "path": "/usr/local/python/current/bin/python",
            "type": "pythonEnvironment"
          },
          {
            "path": "/usr/bin/python3",
            "type": "pythonEnvironment"
          },
          {
            "path": "/bin/python3",
            "type": "pythonEnvironment"
          }
        ],
        "lldb.executable": "/usr/bin/lldb"
      },
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": []
    }
  }
}